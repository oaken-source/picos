
/******************************************************************************
 *       picos                                                                *
 *                                                                            *
 *    Copyright (C) 2014 - 2016  Andreas Grapentin                            *
 *                                                                            *
 *    This program is free software: you can redistribute it and/or modify    *
 *    it under the terms of the GNU General Public License as published by    *
 *    the Free Software Foundation, either version 3 of the License, or       *
 *    (at your option) any later version.                                     *
 *                                                                            *
 *    This program is distributed in the hope that it will be useful,         *
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of          *
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *
 *    GNU General Public License for more details.                            *
 *                                                                            *
 *    You should have received a copy of the GNU General Public License       *
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
 ******************************************************************************/

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

// stack memory
.section .bss.stack

stack_bottom:
.skip 0x1000
stack_top:

.section .text.boot

.globl _start

// r15 -> should begin execution at 0x8000.
// r0 -> 0x00000000
// r1 -> 0x00000C42
// r2 -> 0x00000100 - start of ATAGS
_start:
  // Clear out bss.
  ldr x4, =__bss_start
  ldr x5, =__bss_end
  ldr x6, 0
  ldr x7, 0
  b       2f

1:
  stp x6, x7, [x4]
  add x4, x4, #4

  // If we are still below bss_end, loop.
2:
  cmp x4, x5
  blo 1b

  // Setup the stack.
  ldr x6, =stack_top
  mov sp, x6

  // Call kernel_main
  bl kernel_main

  // halt
halt:
  wfe
  b halt

.size _start, . - _start
